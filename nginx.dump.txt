# configuration file /etc/nginx/nginx.conf:

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}

# configuration file /etc/nginx/mime.types:

types {
    text/html                                        html htm shtml;
    text/css                                         css;
    text/xml                                         xml;
    image/gif                                        gif;
    image/jpeg                                       jpeg jpg;
    application/javascript                           js;
    application/atom+xml                             atom;
    application/rss+xml                              rss;

    text/mathml                                      mml;
    text/plain                                       txt;
    text/vnd.sun.j2me.app-descriptor                 jad;
    text/vnd.wap.wml                                 wml;
    text/x-component                                 htc;

    image/avif                                       avif;
    image/png                                        png;
    image/svg+xml                                    svg svgz;
    image/tiff                                       tif tiff;
    image/vnd.wap.wbmp                               wbmp;
    image/webp                                       webp;
    image/x-icon                                     ico;
    image/x-jng                                      jng;
    image/x-ms-bmp                                   bmp;

    font/woff                                        woff;
    font/woff2                                       woff2;

    application/java-archive                         jar war ear;
    application/json                                 json;
    application/mac-binhex40                         hqx;
    application/msword                               doc;
    application/pdf                                  pdf;
    application/postscript                           ps eps ai;
    application/rtf                                  rtf;
    application/vnd.apple.mpegurl                    m3u8;
    application/vnd.google-earth.kml+xml             kml;
    application/vnd.google-earth.kmz                 kmz;
    application/vnd.ms-excel                         xls;
    application/vnd.ms-fontobject                    eot;
    application/vnd.ms-powerpoint                    ppt;
    application/vnd.oasis.opendocument.graphics      odg;
    application/vnd.oasis.opendocument.presentation  odp;
    application/vnd.oasis.opendocument.spreadsheet   ods;
    application/vnd.oasis.opendocument.text          odt;
    application/vnd.openxmlformats-officedocument.presentationml.presentation
                                                     pptx;
    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
                                                     xlsx;
    application/vnd.openxmlformats-officedocument.wordprocessingml.document
                                                     docx;
    application/vnd.wap.wmlc                         wmlc;
    application/wasm                                 wasm;
    application/x-7z-compressed                      7z;
    application/x-cocoa                              cco;
    application/x-java-archive-diff                  jardiff;
    application/x-java-jnlp-file                     jnlp;
    application/x-makeself                           run;
    application/x-perl                               pl pm;
    application/x-pilot                              prc pdb;
    application/x-rar-compressed                     rar;
    application/x-redhat-package-manager             rpm;
    application/x-sea                                sea;
    application/x-shockwave-flash                    swf;
    application/x-stuffit                            sit;
    application/x-tcl                                tcl tk;
    application/x-x509-ca-cert                       der pem crt;
    application/x-xpinstall                          xpi;
    application/xhtml+xml                            xhtml;
    application/xspf+xml                             xspf;
    application/zip                                  zip;

    application/octet-stream                         bin exe dll;
    application/octet-stream                         deb;
    application/octet-stream                         dmg;
    application/octet-stream                         iso img;
    application/octet-stream                         msi msp msm;

    audio/midi                                       mid midi kar;
    audio/mpeg                                       mp3;
    audio/ogg                                        ogg;
    audio/x-m4a                                      m4a;
    audio/x-realaudio                                ra;

    video/3gpp                                       3gpp 3gp;
    video/mp2t                                       ts;
    video/mp4                                        mp4;
    video/mpeg                                       mpeg mpg;
    video/quicktime                                  mov;
    video/webm                                       webm;
    video/x-flv                                      flv;
    video/x-m4v                                      m4v;
    video/x-mng                                      mng;
    video/x-ms-asf                                   asx asf;
    video/x-ms-wmv                                   wmv;
    video/x-msvideo                                  avi;
}

# configuration file /etc/nginx/conf.d/default.conf:
limit_req_zone $binary_remote_addr zone=api_rl:10m rate=30r/m;
limit_conn_zone $binary_remote_addr zone=sse_conn:10m;

# Map upstream error status codes to a warming flag (for status summary interception)
map $upstream_status $warm {
  default 0;
  000 1;  # no upstream / connection refused
  502 1;
  503 1;
  504 1;
}

# Centralized CORS allow list (defined at http block scope)
map $http_origin $cors_ok {
  default 0;
  '~^https://leok974\.github\.io$' 1;
  '~^https://app\.ledger-mind\.org$' 1;
}

server {
  listen 80;
  server_name _;

  # Root SPA assets
  root /usr/share/nginx/html;
  index index.html;

    # --- Security headers ---
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  # CSP tightened: remove inline script allowance (no 'unsafe-inline' in script-src). Inline styles still temporarily allowed.
  # TODO: eliminate remaining inline <style> blocks and drop 'unsafe-inline' from style-src.
  add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' https: http:; script-src 'self'; style-src 'self';" always;
  # Manifest MIME correction: serve .webmanifest / .manifest as application/manifest+json
  types { application/manifest+json webmanifest manifest; }
  location = /site.webmanifest { default_type application/manifest+json; try_files $uri =404; }

  # Long-cache immutable hashed assets
  # Explicit directory guards for structured asset paths (prevents SPA fallback masking genuine 404s)
  location ^~ /assets/ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }
  location ^~ /fonts/ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # Generic hashed/static file rule (covers remaining standalone assets)
  location ~* \.(?:js|css|woff2|png|jpe?g|webp|gif|svg|ico)$ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # SPA fallback
  location / {
    try_files $uri /index.html;
  }

  # API proxy (preserve URI)
  location /api/ {
    limit_req zone=api_rl burst=15 nodelay;
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    proxy_pass http://backend:8000$request_uri;
  }

  # Streaming SSE
  location /chat/stream {
    limit_conn sse_conn 1;
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    proxy_pass http://backend:8000$request_uri;
  }

  # Health & diagnostics passthrough
  location /llm/ { proxy_pass http://backend:8000$request_uri; }
  location /ready { proxy_pass http://backend:8000/ready; }
  location /metrics { proxy_pass http://backend:8000/metrics; }

  # $cors_ok available from http-level map

  # Preferred path: /api/status/* -> backend /status/* (rewrite) with CORS
  # Special case /api/status/summary for warming interception
  location = /api/status/summary {
    proxy_intercept_errors on;
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_pass http://backend:8000/status/summary;
    add_header X-Status-Path api always;
    if ($cors_ok) {
      add_header Access-Control-Allow-Origin $http_origin always;
      add_header Vary Origin always;
    }
    add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0" always;
    error_page 500 502 503 504 = @warming_json;
  }

  location /api/status/ {
    rewrite ^/api/status/(.*)$ /status/$1 break;
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_pass http://backend:8000;
    add_header X-Status-Path api always;
    # CORS on all outcomes
    if ($cors_ok) {
      add_header Access-Control-Allow-Origin $http_origin always;
      add_header Vary Origin always;
    }
    if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Origin $http_origin always;
      add_header Access-Control-Allow-Methods "GET,OPTIONS" always;
      add_header Access-Control-Allow-Headers "Content-Type" always;
      return 204;
    }
    add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0" always;
  }

  # Legacy direct /status/* passthrough (normalize single CORS header)
  location /status/ {
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_pass http://backend:8000$request_uri;
    add_header X-Status-Path legacy always;
    # Remove upstream duplicates to emit one canonical header set
    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Vary;
    if ($cors_ok) {
      add_header Access-Control-Allow-Origin $http_origin always;
      add_header Vary Origin always;
    }
    if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Origin $http_origin always;
      add_header Access-Control-Allow-Methods "GET,OPTIONS" always;
      add_header Access-Control-Allow-Headers "Content-Type" always;
      return 204;
    }
    add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0" always;
  }

  # Internal warming JSON response (served when upstream summary not yet ready)
  location @warming_json {
    add_header X-Status-Path api always;
    if ($cors_ok) {
      add_header Access-Control-Allow-Origin $http_origin always;
      add_header Vary Origin always;
    }
    add_header Content-Type application/json;
    add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
    return 200 '{"ok":false,"ready":false,"llm":{"path":"warming"},"rag":{"ok":true}}';
  }
}

