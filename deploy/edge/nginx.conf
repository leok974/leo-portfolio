worker_processes auto;

events { worker_connections 1024; }

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	server_tokens off;
	gzip on;
	gzip_types text/css application/javascript application/json image/svg+xml;

	# JSON structured logging for Loki + Promtail
	log_format json_combined escape=json
		'{'
		'"time":"$time_iso8601",'
		'"remote_addr":"$remote_addr",'
		'"method":"$request_method",'
		'"uri":"$request_uri",'
		'"status":$status,'
		'"body_bytes_sent":$body_bytes_sent,'
		'"referrer":"$http_referer",'
		'"agent":"$http_user_agent",'
		'"request_time":$request_time,'
		'"upstream_response_time":"$upstream_response_time",'
		'"limit_req_status":"$limit_req_status"'
		'}';

	access_log /var/log/nginx/access.json.log json_combined;

	# Rate limiting for metrics ingestion
	limit_req_zone $binary_remote_addr zone=metrics_zone:10m rate=5r/s;
	
	# Rate limiting for chat endpoints (30 req/min = 0.5 req/s)
	limit_req_zone $binary_remote_addr zone=chat_zone:10m rate=30r/m;
	
	limit_req_status 429;

	map $http_upgrade $connection_upgrade { default upgrade; '' close; }

	map $http_origin $cors_allow {
		default "";
		"~^https?://(localhost|127\.0\.0\.1)(:\d+)?$" $http_origin;
	}

	server {
		listen 80 reuseport;

		root /usr/share/nginx/html;
		index index.html;

		# Security Headers
		add_header X-Frame-Options "DENY" always;
		add_header X-Content-Type-Options "nosniff" always;
		add_header Referrer-Policy "no-referrer" always;
		add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
		add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' https://assistant.ledger-mind.org; script-src 'self' 'sha256-agVi37OvPe9UtrYEB/KMHK3iJVAl08ok4xzbm7ry2JE='; style-src 'self'; object-src 'none'; base-uri 'self'; frame-ancestors 'none'; upgrade-insecure-requests;" always;

		location = /healthz { return 200 'ok'; }

		location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
			access_log off;
			expires 30d;
			add_header Cache-Control "public, immutable";
			try_files $uri =404;
		}

		location / {
			try_files $uri $uri/ /index.html;
		}

		location /api/ {
			proxy_pass http://backend:8000/;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header Access-Control-Allow-Origin $cors_allow always;
			add_header Access-Control-Allow-Credentials true always;
			add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
			add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
			if ($request_method = OPTIONS) { return 204; }
		}

		location /api/metrics/event {
			proxy_pass http://backend:8000/api/metrics/event;
			limit_req zone=metrics_zone burst=10 nodelay;
			client_max_body_size 64k;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header Access-Control-Allow-Origin $cors_allow always;
			add_header Access-Control-Allow-Credentials true always;
			add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
			add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
			if ($request_method = OPTIONS) { return 204; }
		}

		location = /chat {
			limit_req zone=chat_zone burst=10 nodelay;
			proxy_pass http://backend:8000/chat;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header Access-Control-Allow-Origin $cors_allow always;
			add_header Access-Control-Allow-Credentials true always;
			add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
			add_header Access-Control-Allow-Methods "POST, OPTIONS" always;
			if ($request_method = OPTIONS) { return 204; }
		}

		location /chat/stream {
			limit_req zone=chat_zone burst=10 nodelay;
			proxy_pass http://backend:8000/chat/stream;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_read_timeout 1h;
			proxy_send_timeout 1h;
			proxy_buffering off;
			add_header Access-Control-Allow-Origin $cors_allow always;
			add_header Access-Control-Allow-Credentials true always;
		}

		location /llm/ {
			proxy_pass http://backend:8000/llm/;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
		}
	}
}
