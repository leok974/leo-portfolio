worker_processes auto;

events { worker_connections 1024; }

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	server_tokens off;
	gzip on;
	gzip_types text/css application/javascript application/json image/svg+xml;

	map $http_upgrade $connection_upgrade { default upgrade; '' close; }

	map $http_origin $cors_allow {
		default "";
		"~^https?://(localhost|127\.0\.0\.1)(:\d+)?$" $http_origin;
	}

	server {
		listen 80 reuseport;

		root /usr/share/nginx/html;
		index index.html;

		location = /healthz { return 200 'ok'; }

		location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
			access_log off;
			expires 30d;
			add_header Cache-Control "public, immutable";
			try_files $uri =404;
		}

		location / {
			try_files $uri $uri/ /index.html;
		}

		location /api/ {
			proxy_pass http://backend:8000/;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header Access-Control-Allow-Origin $cors_allow always;
			add_header Access-Control-Allow-Credentials true always;
			add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
			add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
			if ($request_method = OPTIONS) { return 204; }
		}

		location /chat/stream {
			proxy_pass http://backend:8000/chat/stream;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_read_timeout 1h;
			proxy_send_timeout 1h;
			proxy_buffering off;
			add_header Access-Control-Allow-Origin $cors_allow always;
			add_header Access-Control-Allow-Credentials true always;
		}

		location /llm/ {
			proxy_pass http://backend:8000/llm/;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
		}
	}
}
