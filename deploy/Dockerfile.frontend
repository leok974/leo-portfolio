## syntax=docker/dockerfile:1.7

# ===========================
# Optional Node/Vite build stage
# ===========================
FROM node:20-alpine AS vite-build
ARG FRONTEND_DIR=.
ARG VITE_BUILD_SHA=local
WORKDIR /app
COPY ${FRONTEND_DIR}/package*.json ./
RUN test -f package.json
RUN npm ci
COPY ${FRONTEND_DIR}/ ./
ENV VITE_BUILD_SHA=${VITE_BUILD_SHA}
# Generate favicons (prebuild) and perform production build (will include SRI postbuild)
RUN npm run build:prod

# ===========================
# Static copy stage (no build)
# ===========================
FROM alpine:3.20 AS static-copy
ARG FRONTEND_DIR=.
WORKDIR /src
COPY ${FRONTEND_DIR}/ ./
RUN test -f index.html
RUN mkdir -p /out && cp -r . /out

# ===========================
# Final (Vite build)
# ===========================
FROM nginx:1.27-alpine AS frontend-vite-final
ARG NGINX_CONF=deploy/nginx.conf
COPY ${NGINX_CONF} /etc/nginx/conf.d/default.conf
# Copy built SPA
COPY --from=vite-build /app/dist/ /usr/share/nginx/html/
# Ensure root-level favicons (generated into public/) are present even if not emitted to dist
COPY --from=vite-build /app/public/leo-avatar-sm.png /usr/share/nginx/html/leo-avatar-sm.png
COPY --from=vite-build /app/public/leo-avatar-md.png /usr/share/nginx/html/leo-avatar-md.png
# Normalize permissions so directories remain traversable and files stay read-only
RUN find /usr/share/nginx/html -type d -exec chmod 755 {} + && \
	find /usr/share/nginx/html -type f -exec chmod 644 {} +

# ===========================
# Final (Static copy)
# ===========================
FROM nginx:1.27-alpine AS frontend-static-final
ARG NGINX_CONF=deploy/nginx.conf
COPY ${NGINX_CONF} /etc/nginx/conf.d/default.conf
COPY --from=static-copy /out/ /usr/share/nginx/html/
RUN find /usr/share/nginx/html -type d -exec chmod 755 {} + && \
	find /usr/share/nginx/html -type f -exec chmod 644 {} +

