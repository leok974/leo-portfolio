# Production Nginx Configuration for leo-portfolio
# Copy this into deploy/nginx/nginx.prod.conf or your nginx server block

server {
  listen 80;
  listen [::]:80;
  server_name your-domain.com www.your-domain.com;

  # Redirect HTTP to HTTPS (uncomment when SSL configured)
  # return 301 https://$server_name$request_uri;

  root /usr/share/nginx/html;
  index index.html;

  # ============================================================================
  # SECURITY HEADERS (CRITICAL)
  # ============================================================================

  # HSTS - Force HTTPS for 1 year (enable only when HTTPS is working)
  # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

  # Content Security Policy - Allow Calendly + Google Fonts
  add_header Content-Security-Policy "default-src 'self'; script-src 'self' https://assets.calendly.com; style-src 'self' 'unsafe-inline' https://assets.calendly.com; img-src 'self' data: https://*.calendly.com; frame-src https://calendly.com https://*.calendly.com; connect-src 'self' https://calendly.com https://*.calendly.com; font-src 'self' https://fonts.gstatic.com; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; object-src 'none';" always;

  # Referrer Policy - Only send origin on cross-origin
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;

  # Prevent MIME sniffing
  add_header X-Content-Type-Options "nosniff" always;

  # Prevent clickjacking (allow same origin iframes)
  add_header X-Frame-Options "SAMEORIGIN" always;

  # Optional: Restrict browser features
  add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

  # ============================================================================
  # CACHE CONFIGURATION
  # ============================================================================

  # Long-cache hashed assets (immutable)
  location ^~ /assets/ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # Long-cache fonts
  location ^~ /fonts/ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # Long-cache static files with hashed names
  location ~* \.(?:js|css|woff2|woff|ttf|otf|png|jpe?g|webp|avif|gif|svg|ico)$ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # Short cache for HTML (allows quick updates)
  location ~* \.html$ {
    add_header Cache-Control "public, max-age=300, must-revalidate";
    try_files $uri =404;
  }

  # No cache for service worker (if used)
  location = /sw.js {
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    try_files $uri =404;
  }

  # ============================================================================
  # MIME TYPES
  # ============================================================================

  types {
    text/html                             html htm;
    text/css                              css;
    application/javascript                js mjs;
    application/json                      json;
    font/woff2                            woff2;
    font/woff                             woff;
    font/ttf                              ttf;
    font/otf                              otf;
    image/webp                            webp;
    image/avif                            avif;
    image/svg+xml                         svg svgz;
    image/png                             png;
    image/jpeg                            jpeg jpg;
    image/gif                             gif;
    application/manifest+json             webmanifest manifest;
  }

  # ============================================================================
  # ROUTING
  # ============================================================================

  # SPA fallback - serve index.html for non-existent routes
  location / {
    try_files $uri $uri/ /index.html;
  }

  # Health check endpoint (if backend available)
  location /api/ready {
    proxy_pass http://backend:8000/ready;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # API proxy (if backend available)
  location /api/ {
    proxy_pass http://backend:8000$request_uri;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_buffering off;
    tcp_nodelay on;
    gzip off;
  }

  # SSE streaming endpoint (if backend available)
  location /chat/stream {
    proxy_pass http://backend:8000$request_uri;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_buffering off;  # CRITICAL for SSE
    tcp_nodelay on;
    gzip off;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
  }

  # ============================================================================
  # GZIP COMPRESSION
  # ============================================================================

  gzip on;
  gzip_vary on;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types
    application/javascript
    application/json
    application/manifest+json
    application/rss+xml
    application/xml
    font/opentype
    font/truetype
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;

  # Disable gzip for IE6
  gzip_disable "msie6";
}

# ============================================================================
# HTTPS SERVER (uncomment when SSL certificates configured)
# ============================================================================

# server {
#   listen 443 ssl http2;
#   listen [::]:443 ssl http2;
#   server_name your-domain.com www.your-domain.com;
#
#   root /usr/share/nginx/html;
#   index index.html;
#
#   # SSL certificates (Let's Encrypt recommended)
#   ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#
#   # SSL configuration (Mozilla Intermediate)
#   ssl_protocols TLSv1.2 TLSv1.3;
#   ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
#   ssl_prefer_server_ciphers off;
#   ssl_session_cache shared:SSL:10m;
#   ssl_session_timeout 10m;
#   ssl_stapling on;
#   ssl_stapling_verify on;
#
#   # Enable HSTS now that HTTPS is working
#   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#
#   # ... (copy all other add_header, location blocks from HTTP server above)
# }
