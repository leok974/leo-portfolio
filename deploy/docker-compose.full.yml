version: "3.9"

# Full stack including:
#  - ollama model host
#  - backend FastAPI service
#  - standalone static frontend (nginx)
#  - optional edge nginx (single host) combining API + static (future)

services:
  ollama:
    image: ollama/ollama:latest
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    volumes:
      - ollama:/root/.ollama
    ports:
      - "127.0.0.1:11435:11434" # host port changed from 11434 to avoid local conflict
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ..
      dockerfile: assistant_api/Dockerfile
    env_file:
      - ../assistant_api/.env.prod
    environment:
      - OPENAI_BASE_URL=http://ollama:11434/v1
      - OPENAI_MODEL=gpt-oss:20b
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
      - FALLBACK_API_KEY_FILE=/run/secrets/openai_api_key
      - OPENAI_API_KEY_FILE=/run/secrets/openai_api_key
    depends_on:
      - ollama
    volumes:
      - ../data:/app/data
    expose:
      - "8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ready"]
      interval: 30s
      timeout: 5s
      retries: 3
    secrets:
      - openai_api_key

  frontend:
    build:
      context: ..
      dockerfile: deploy/Dockerfile.frontend
    image: ${FRONTEND_IMAGE:-leo-portfolio/frontend:dev}
    depends_on:
      - backend
    expose:
      - "8080"
    restart: unless-stopped

  edge:
    build:
      context: ./edge
    image: ${EDGE_IMAGE:-leo-portfolio/edge:dev}
    depends_on:
      - backend
      - frontend
    ports:
      - "${EDGE_PORT:-8080}:80"
    restart: unless-stopped

  metrics-rotator:
    image: python:3.12-alpine
    working_dir: /app
    command: ["python", "scripts/metrics_rotate.py", "--interval", "300", "--gzip-after", "3", "--retention", "30", "--max-mb", "64"]
    volumes:
      - ../:/app:ro
      - ../data:/app/data
    restart: unless-stopped

  # Loki log aggregation server
  loki:
    image: grafana/loki:2.9.4
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "127.0.0.1:3100:3100"
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 3s
      retries: 5

  # Promtail log shipper (scrapes nginx + backend logs)
  promtail:
    image: grafana/promtail:2.9.4
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./promtail/promtail.yaml:/etc/promtail/config.yml:ro
      - /var/log/nginx:/var/log/nginx:ro
      - ../data/logs:/var/log/assistant_api:ro
      - promtail-positions:/tmp
    depends_on:
      - loki
    restart: unless-stopped

volumes:
  ollama:
  loki-data:
  promtail-positions:

secrets:
  openai_api_key:
    file: ../secrets/openai_api_key
