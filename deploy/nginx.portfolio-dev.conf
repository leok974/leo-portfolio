# Portfolio nginx - Development (Production API Proxy)
# This config proxies API requests to production assistant.ledger-mind.org

# CSP nonce generation (for inline scripts)
map $request_id $csp_nonce {
  default $request_id;
}

# Redirect apex domain to www (canonical URL)
server {
  listen 80;
  server_name leoklemet.com;
  return 301 https://www.leoklemet.com$request_uri;
}

# Main server block
server {
  listen 80;
  server_name www.leoklemet.com _;
  root /usr/share/nginx/html;
  index index.html;

  # DNS resolver for HTTPS proxy_pass (use Docker DNS + Google DNS fallback)
  resolver 127.0.0.11 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 10s;

  # Security headers
  add_header X-Config "portfolio-dev-v1";
  add_header X-Frame-Options "DENY" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

  # Content Security Policy with nonce and script-src-elem for external scripts
  add_header X-CSP-Probe "on";
  add_header Content-Security-Policy "default-src 'self'; base-uri 'self'; frame-ancestors 'self'; object-src 'none'; script-src 'self' 'nonce-$csp_nonce' 'strict-dynamic'; script-src-elem 'self' https://www.leoklemet.com https://assets.calendly.com https://static.cloudflareinsights.com https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://assets.calendly.com; img-src 'self' data: https: blob:; font-src 'self' data: https://assets.calendly.com; frame-src 'self' https://calendly.com https://assets.calendly.com; connect-src 'self' http://127.0.0.1:8001 https://assistant.ledger-mind.org https://calendly.com https://assets.calendly.com; form-action 'self'; upgrade-insecure-requests" always;

  # Inject nonce into HTML
  sub_filter_once off;
  sub_filter '__CSP_NONCE__' '$csp_nonce';
  sub_filter_types text/html;

  # Static assets (cache aggressively with precedence)
  # ^~ prefix ensures this matches before regex locations
  location ^~ /assets/ {
    root /usr/share/nginx/html;
    try_files $uri =404;
    add_header Cache-Control "public, max-age=31536000, immutable" always;
  }

  # Projects JSON
  location = /projects.json {
    add_header Content-Type application/json;
    expires 5m;
  }

  # IMPORTANT: This location block MUST stay ABOVE any regex locations and the SPA fallback.
  # The ^~ prefix modifier gives this block precedence over regex patterns, preventing
  # accidental matches by other location blocks (e.g., ~ \.png$ or the catch-all / block).
  # Without ^~, OG images would return 404 or serve index.html instead of actual PNG files.
  location ^~ /og/ {
    # Map URI /og/foo.png -> /usr/share/nginx/html/og/foo.png
    root /usr/share/nginx/html;
    try_files $uri =404;

    # Lower TTL while iterating; bump to 86400 later
    add_header Cache-Control "public, max-age=600" always;
  }

  # Project thumbnail images (same precedence pattern as /og/)
  location ^~ /images/ {
    root /usr/share/nginx/html;
    try_files $uri =404;
    add_header Cache-Control "public, max-age=86400" always;
  }

  # Resume files (PDFs, etc.)
  location /resume/ {
    expires 1h;
    add_header Cache-Control "public";
    add_header Content-Disposition "inline";
  }

  # --- API (same-origin proxy to portfolio backend) ---
  location /api/ {
    proxy_pass         http://portfolio-api.int:8000/api/;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_read_timeout 30s;
  }

  # --- Chat (websocket/HTTP) ---
  location /chat {
    proxy_pass         http://portfolio-api.int:8000/chat;
    proxy_set_header   Host $host;
    proxy_http_version 1.1;
    proxy_set_header   Connection "";
    proxy_read_timeout 300s;
  }

  # --- Chat SSE ---
  location /chat/stream {
    proxy_pass         http://portfolio-api.int:8000/chat/stream;
    proxy_set_header   Host $host;
    proxy_http_version 1.1;
    proxy_set_header   Connection "";
    proxy_buffering    off;
    proxy_read_timeout 300s;
  }

  # Health check endpoint
  location = /healthz {
    access_log off;
    add_header Content-Type text/plain;
    return 200 "ok";
  }

  # SPA fallback (all other routes)
  location / {
    try_files $uri $uri/ /index.html;
  }
}
