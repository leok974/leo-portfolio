# Portfolio nginx - Development (Production API Proxy)
# This config proxies API requests to production assistant.ledger-mind.org

# CSP nonce generation (for inline scripts)
map $request_id $csp_nonce {
  default $request_id;
}

server {
  listen 80;
  server_name _;
  root /usr/share/nginx/html;
  index index.html;

  # DNS resolver for HTTPS proxy_pass (use Docker DNS + Google DNS fallback)
  resolver 127.0.0.11 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 10s;

  # Security headers
  add_header X-Config "portfolio-dev-v1";
  add_header X-Frame-Options "DENY" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

  # Content Security Policy with nonce
  add_header X-CSP-Probe "on";
  add_header Content-Security-Policy "default-src 'self'; base-uri 'self'; frame-ancestors 'self'; object-src 'none'; script-src 'self' 'nonce-$csp_nonce' https://static.cloudflareinsights.com https://assets.calendly.com 'strict-dynamic'; style-src 'self' 'unsafe-inline' https://assets.calendly.com; img-src 'self' data: https:; font-src 'self' data: https://assets.calendly.com; frame-src 'self' https://calendly.com https://assets.calendly.com; connect-src 'self' http://127.0.0.1:8001 https://assistant.ledger-mind.org https://calendly.com https://assets.calendly.com; form-action 'self'; upgrade-insecure-requests" always;

  # Inject nonce into HTML
  sub_filter_once off;
  sub_filter '__CSP_NONCE__' '$csp_nonce';
  sub_filter_types text/html;

  # Static assets (cache aggressively)
  location /assets/ {
    expires 1y;
    add_header Cache-Control "public, immutable";
  }

  # Projects JSON
  location = /projects.json {
    add_header Content-Type application/json;
    expires 5m;
  }

  # Resume files (PDFs, etc.)
  location /resume/ {
    expires 1h;
    add_header Cache-Control "public";
    add_header Content-Disposition "inline";
  }

  # POST /chat/stream endpoint (SSE streaming) -> Production API
  location /chat/stream {
    # Proxy to production assistant API
    proxy_pass https://assistant.ledger-mind.org/chat/stream;
    proxy_http_version 1.1;

    # SNI + streaming-friendly settings
    proxy_set_header Host assistant.ledger-mind.org;
    proxy_ssl_server_name on;
    proxy_set_header Connection '';
    proxy_buffering off;             # critical for SSE streams
    proxy_request_buffering off;
    proxy_read_timeout 3600s;

    # Pass through headers
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Cookie $http_cookie;
  }

  # POST /chat endpoint (non-streaming) -> Production API
  location /chat {
    # Proxy to production assistant API
    proxy_pass https://assistant.ledger-mind.org/chat;
    proxy_http_version 1.1;

    # Important for HTTPS/SNI
    proxy_set_header Host assistant.ledger-mind.org;
    proxy_ssl_server_name on;
    proxy_set_header Connection '';

    # Pass through headers
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Cookie $http_cookie;
  }

  # API proxy - Point to host machine's backend at 127.0.0.1:8001
  location /api/ {
    # Use host.docker.internal to reach Windows host from container
    proxy_pass http://host.docker.internal:8001;
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    # Pass through headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Cookie $http_cookie;
  }

  # Health check endpoint
  location = /healthz {
    access_log off;
    add_header Content-Type text/plain;
    return 200 "ok";
  }

  # SPA fallback (all other routes)
  location / {
    try_files $uri $uri/ /index.html;
  }
}
