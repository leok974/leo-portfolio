# Portfolio Production Nginx Configuration
# Serves portfolio UI with same-origin API proxy (no CORS)

# CSP nonce generation (for inline scripts)
map $request_id $csp_nonce {
  default $request_id;
}

# HTTP to HTTPS redirect
server {
  listen 80;
  server_name assistant.ledger-mind.org;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name assistant.ledger-mind.org;

  # ===== SSL CONFIGURATION =====
  # Note: Replace with your actual SSL cert paths
  # ssl_certificate /etc/letsencrypt/live/assistant.ledger-mind.org/fullchain.pem;
  # ssl_certificate_key /etc/letsencrypt/live/assistant.ledger-mind.org/privkey.pem;
  # ssl_protocols TLSv1.2 TLSv1.3;
  # ssl_ciphers HIGH:!aNULL:!MD5;
  # ssl_prefer_server_ciphers on;

  # ===== STATIC UI =====
  root /var/www/portfolio;  # Path where built files are deployed
  index index.html;

  # DNS resolver for HTTPS proxy_pass
  resolver 127.0.0.11 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 10s;

  # ===== SECURITY HEADERS =====
  add_header X-Config "portfolio-prod-v1" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

  # CSP nonce injection
  sub_filter_once off;
  sub_filter_types text/html;
  sub_filter "__CSP_NONCE__" "$csp_nonce";

  # Content Security Policy
  add_header Content-Security-Policy "default-src 'self'; base-uri 'self'; frame-ancestors 'self'; object-src 'none'; script-src 'self' 'nonce-$csp_nonce' https://static.cloudflareinsights.com https://assets.calendly.com 'strict-dynamic'; style-src 'self' 'unsafe-inline' https://assets.calendly.com; img-src 'self' data: https:; font-src 'self' data: https://assets.calendly.com; frame-src 'self' https://calendly.com https://assets.calendly.com; connect-src 'self' https://assistant.ledger-mind.org https://calendly.com https://assets.calendly.com; form-action 'self'; upgrade-insecure-requests" always;

  # ===== HEALTH CHECK =====
  location = /healthz {
    access_log off;
    add_header Content-Type text/plain;
    return 200 "ok\n";
  }

  # ===== ASSISTANT API PROXY (same-origin, no CORS) =====
  # Non-streaming chat
  location /chat {
    proxy_pass https://assistant.ledger-mind.org/chat;
    proxy_http_version 1.1;

    proxy_set_header Host assistant.ledger-mind.org;
    proxy_ssl_server_name on;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Cookie $http_cookie;
  }

  # Streaming chat
  location /chat/stream {
    proxy_pass https://assistant.ledger-mind.org/chat/stream;
    proxy_http_version 1.1;

    proxy_set_header Host assistant.ledger-mind.org;
    proxy_ssl_server_name on;
    proxy_set_header Connection '';
    proxy_buffering off;
    proxy_request_buffering off;
    proxy_read_timeout 3600s;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Cookie $http_cookie;
  }

  # ===== RESUME ENDPOINTS (pass-through to API for server-side generation) =====
  location /resume/ {
    proxy_pass https://assistant.ledger-mind.org/resume/;
    proxy_http_version 1.1;

    proxy_set_header Host assistant.ledger-mind.org;
    proxy_ssl_server_name on;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Cookie $http_cookie;
  }

  # ===== API PROXY (for layout, auth, etc.) =====
  location /api/ {
    proxy_pass https://assistant.ledger-mind.org/api/;
    proxy_http_version 1.1;

    proxy_set_header Host assistant.ledger-mind.org;
    proxy_ssl_server_name on;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Cookie $http_cookie;
  }

  # ===== STATIC ASSETS =====
  location /assets/ {
    try_files $uri =404;
    access_log off;
    expires 30d;
    add_header Cache-Control "public, immutable";
  }

  # Projects JSON
  location = /projects.json {
    add_header Content-Type application/json;
    expires 5m;
  }

  # ===== SPA FALLBACK (AFTER all API/asset routes) =====
  location / {
    try_files $uri $uri/ /index.html;
  }
}
