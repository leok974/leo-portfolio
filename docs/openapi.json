{
  "openapi": "3.1.0",
  "info": {
    "title": "Leo Portfolio Assistant",
    "version": "0.1.0"
  },
  "paths": {
    "/api/rag/query": {
      "post": {
        "summary": "Rag Query",
        "operationId": "rag_query_api_rag_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/llm/health": {
      "get": {
        "tags": [
          "llm"
        ],
        "summary": "Llm Health",
        "operationId": "llm_health_llm_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "summary": "Ready",
        "operationId": "ready_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/ping": {
      "get": {
        "summary": "Ping",
        "operationId": "ping_api_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/ready": {
      "get": {
        "summary": "Quick Ready",
        "operationId": "quick_ready_api_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/metrics": {
      "get": {
        "summary": "Metrics Json",
        "description": "Lightweight JSON metrics for embeddings/rerank/gen (counts, last latency, last backend).",
        "operationId": "metrics_json_api_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/metrics.csv": {
      "get": {
        "summary": "Metrics Csv",
        "description": "CSV view of the same metrics.",
        "operationId": "metrics_csv_api_metrics_csv_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/status/summary": {
      "get": {
        "summary": "Status Summary",
        "operationId": "status_summary_status_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/status/cors": {
      "get": {
        "summary": "Status Cors",
        "operationId": "status_cors_meta_simple",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/status/uptime": {
      "get": {
        "summary": "Status Uptime",
        "operationId": "status_uptime_status_uptime_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Uptime"
                }
              }
            }
          }
        }
      }
    },
    "/llm/diag": {
      "get": {
        "tags": [
          "llm"
        ],
        "summary": "Llm Diag",
        "operationId": "llm_diag_llm_diag_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/llm/models": {
      "get": {
        "tags": [
          "llm"
        ],
        "summary": "Models",
        "operationId": "models_llm_models_get",
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Refresh primary model list",
              "default": false,
              "title": "Refresh"
            },
            "description": "Refresh primary model list"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/llm/primary/ping": {
      "get": {
        "tags": [
          "llm"
        ],
        "summary": "Primary Ping",
        "operationId": "primary_ping_llm_primary_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/llm/primary/chat-latency": {
      "get": {
        "tags": [
          "llm"
        ],
        "summary": "Primary Chat Latency",
        "description": "DEPRECATED chat-pipeline micro latency.\n\nPreviously at /llm/primary/latency. Kept temporarily for comparison with the\nlightweight direct /llm/primary/latency probe (which hits /models directly).\nReturns per-run ms plus basic stats and deprecation metadata.",
        "operationId": "primary_chat_latency_llm_primary_chat_latency_get",
        "parameters": [
          {
            "name": "n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "N"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/live": {
      "get": {
        "summary": "Live",
        "operationId": "live_live_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Healthz",
        "operationId": "healthz_healthz_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/metrics/health": {
      "get": {
        "summary": "Health Metrics",
        "operationId": "health_metrics_metrics_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/llm/primary/latency": {
      "get": {
        "tags": [
          "llm"
        ],
        "summary": "Primary Latency",
        "description": "Low-overhead latency sampling hitting the primary /models endpoint directly.",
        "operationId": "primary_latency_llm_primary_latency_get",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "Total probes (including warmup).",
              "default": 15,
              "title": "Count"
            },
            "description": "Total probes (including warmup)."
          },
          {
            "name": "warmup",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 0,
              "description": "Warmup probes not counted in stats.",
              "default": 2,
              "title": "Warmup"
            },
            "description": "Warmup probes not counted in stats."
          },
          {
            "name": "timeout_ms",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 5000,
              "minimum": 50,
              "description": "Per-probe timeout in ms.",
              "default": 500,
              "title": "Timeout Ms"
            },
            "description": "Per-probe timeout in ms."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Primary Latency Llm Primary Latency Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/feedback": {
      "post": {
        "summary": "Post Feedback",
        "operationId": "post_feedback_api_feedback_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/feedback/recent": {
      "get": {
        "summary": "Get Feedback Recent",
        "operationId": "get_feedback_recent_api_feedback_recent_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/feedback/export.csv": {
      "get": {
        "summary": "Get Feedback Csv",
        "operationId": "get_feedback_csv_api_feedback_export_csv_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Metrics",
        "operationId": "metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/rag/projects": {
      "get": {
        "summary": "Api Rag Projects",
        "description": "Return distinct project IDs from chunks (with counts).\n- include_unknown=false => only non-empty project_id rows\n- include_unknown=true  => groups empty/null under 'unknown'",
        "operationId": "api_rag_projects_api_rag_projects_get",
        "parameters": [
          {
            "name": "include_unknown",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Unknown"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools": {
      "get": {
        "summary": "Tools List",
        "operationId": "tools_list_api_tools_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/plan": {
      "post": {
        "summary": "Plan",
        "operationId": "plan_api_plan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/act": {
      "post": {
        "summary": "Act",
        "operationId": "act_api_act_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tools/exec": {
      "post": {
        "summary": "Tools Exec",
        "operationId": "tools_exec_api_tools_exec_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolExecIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/eval/history": {
      "get": {
        "summary": "Api Eval History",
        "operationId": "api_eval_history_api_eval_history_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 24,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/eval/run": {
      "post": {
        "summary": "Api Eval Run",
        "operationId": "api_eval_run_api_eval_run_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvalRunIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chat": {
      "post": {
        "summary": "Chat",
        "operationId": "chat_chat_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chat/stream": {
      "post": {
        "summary": "Chat Stream Ep",
        "operationId": "chat_stream_ep_chat_stream_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/rag/ingest": {
      "post": {
        "summary": "Trigger Ingest",
        "operationId": "trigger_ingest_rag_ingest_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rag/ingest": {
      "post": {
        "summary": "Trigger Ingest",
        "operationId": "trigger_ingest_api_rag_ingest_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActIn": {
        "properties": {
          "question": {
            "type": "string",
            "title": "Question"
          }
        },
        "type": "object",
        "required": [
          "question"
        ],
        "title": "ActIn"
      },
      "ChatReq": {
        "properties": {
          "messages": {
            "items": {},
            "type": "array",
            "title": "Messages"
          },
          "context": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "stream": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream",
            "default": false
          },
          "include_sources": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Sources",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "messages"
        ],
        "title": "ChatReq"
      },
      "EvalRunIn": {
        "properties": {
          "files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Files",
            "default": [
              "evals/baseline.jsonl",
              "evals/tool_planning.jsonl"
            ]
          },
          "fail_under": {
            "type": "number",
            "title": "Fail Under",
            "default": 0.67
          }
        },
        "type": "object",
        "title": "EvalRunIn"
      },
      "FeedbackIn": {
        "properties": {
          "question": {
            "type": "string",
            "title": "Question",
            "default": ""
          },
          "answer": {
            "type": "string",
            "title": "Answer",
            "default": ""
          },
          "score": {
            "type": "integer",
            "title": "Score",
            "description": "+1 for thumbs up, -1 for thumbs down",
            "default": 0
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "served_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Served By"
          },
          "grounded": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grounded"
          },
          "sources_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sources Count"
          },
          "scope": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scope"
          },
          "route": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route"
          }
        },
        "type": "object",
        "title": "FeedbackIn"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "QueryIn": {
        "properties": {
          "question": {
            "type": "string",
            "title": "Question"
          },
          "k": {
            "type": "integer",
            "title": "K",
            "default": 8
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": [
          "question"
        ],
        "title": "QueryIn"
      },
      "Status": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "llm": {
            "additionalProperties": true,
            "type": "object",
            "title": "Llm"
          },
          "openai_configured": {
            "type": "boolean",
            "title": "Openai Configured"
          },
          "rag": {
            "additionalProperties": true,
            "type": "object",
            "title": "Rag"
          },
          "ready": {
            "type": "boolean",
            "title": "Ready"
          },
          "metrics_hint": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metrics Hint"
          },
          "tooltip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tooltip"
          },
          "primary": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary"
          },
          "last_served_by": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Served By"
          },
          "build": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Build"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "llm",
          "openai_configured",
          "rag",
          "ready",
          "metrics_hint"
        ],
        "title": "Status"
      },
      "ToolExecIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "args": {
            "additionalProperties": true,
            "type": "object",
            "title": "Args",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ToolExecIn"
      },
      "Uptime": {
        "properties": {
          "uptime_seconds": {
            "type": "number",
            "title": "Uptime Seconds"
          },
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "build": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Build"
          }
        },
        "type": "object",
        "required": [
          "uptime_seconds",
          "start_time"
        ],
        "title": "Uptime"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}