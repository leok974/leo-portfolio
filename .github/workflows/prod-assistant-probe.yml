name: Prod Assistant Probe

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

jobs:
  probe:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Gather probe data
        run: |
          set -euo pipefail
          BASE="https://assistant.ledger-mind.org"
          now=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          # root
          curl -sw '\n%{time_total}' "$BASE/" -o /tmp/root.html | tail -n1 > /tmp/root.tt || echo "0" > /tmp/root.tt
          curl -sw '\n%{time_total}' "$BASE/api/ready" -o /tmp/ready.json | tail -n1 > /tmp/ready.tt || echo "0" > /tmp/ready.tt
            curl -sw '\n%{time_total}' "$BASE/status/summary" -o /tmp/status.json | tail -n1 > /tmp/status.tt || echo "0" > /tmp/status.tt
          # synthetic chat (best-effort; 204/200 OK)
          chat_ms=$(curl -s -o /dev/null -w "%{time_total}" -H 'content-type: application/json' -d '{"messages":[{"role":"user","content":"ping"}]}' "$BASE/api/chat" || echo "0")

          jq -n --arg now "$now" \
              --arg root_ms "$(cat /tmp/root.tt)" \
              --arg ready_ms "$(cat /tmp/ready.tt)" \
              --arg status_ms "$(cat /tmp/status.tt)" \
              --arg chat_ms "$chat_ms" \
              '{
                ts: $now,
                targets: { base: "https://assistant.ledger-mind.org" },
                latencies: {
                  root: ($root_ms|tonumber? // null),
                  ready: ($ready_ms|tonumber? // null),
                  status: ($status_ms|tonumber? // null),
                  chat: ($chat_ms|tonumber? // null)
                }
              }' > probe.json
      - name: Compute badge payload
        run: |
          set -euo pipefail
          max() { awk 'BEGIN{m=0} {if($1>m)m=$1} END{print m+0}'; }
          r=$(jq -r '.latencies.root // empty'  probe.json)
          a=$(jq -r '.latencies.ready // empty' probe.json)
          s=$(jq -r '.latencies.status // empty' probe.json)
          c=$(jq -r '.latencies.chat // empty'   probe.json)
          vals=$(printf "%s\n%s\n%s\n%s\n" "${r:-0}" "${a:-0}" "${s:-0}" "${c:-0}")
          worst=$(echo "$vals" | max)

          # color & message rules
          msg="ok"; color="green"
          if jq -e ' .latencies | to_entries | any(.value == null) ' probe.json >/dev/null; then
            msg="partial"; color="lightgrey"
          fi
          awk -v w="$worst" '
            BEGIN{
              if (w > 10) {print "red error"; exit}
              if (w > 5)  {print "orange degraded"; exit}
              print "keep"
            }' | {
              read mark label || true
              if [ "${mark:-}" != "keep" ]; then color="$mark"; msg="$label"; fi
            }

          # include Build ID if server sends it
          build_id=$(curl -sI https://assistant.ledger-mind.org | awk -F': ' 'BEGIN{IGNORECASE=1} /X-Build-ID/{print $2}' | tr -d '\r')

          jq -n \
            --arg schemaVersion "1" \
            --arg label "assistant" \
            --arg message "$msg" \
            --arg color "$color" \
            --argjson extra "$(jq -c --arg build "${build_id:-}" '.probe = input | .build = $build' probe.json)" \
            '{schemaVersion: ($schemaVersion|tonumber), label: $label, message: $message, color: $color, extra: $extra}' \
            > status.json
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: prod-assistant-probe
          path: probe.json
      - name: Publish badge JSON to status-badge branch
        run: |
          set -euo pipefail
          git config user.name  "ci-bot"
          git config user.email "ci-bot@users.noreply.github.com"
          git fetch --all --prune
          git checkout -B status-badge
          # status.json already here; just commit
          git add status.json probe.json
          git commit -m "badge: update $(date -u +"%Y-%m-%dT%H:%M:%SZ")" || echo "nothing to commit"
          git push -u origin status-badge
