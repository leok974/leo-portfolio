name: Deploy Production Secrets

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "deploy" to confirm secret deployment'
        required: true
        type: string

jobs:
  deploy-secrets:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'deploy'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate confirmation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "deploy" ]; then
            echo "❌ Deployment cancelled. You must type 'deploy' to confirm."
            exit 1
          fi
          echo "✅ Confirmation validated"

      - name: Create .env.production from GitHub Secrets
        env:
          FIGMA_PAT: ${{ secrets.FIGMA_PAT }}
          FIGMA_TEAM_ID: ${{ secrets.FIGMA_TEAM_ID }}
          FIGMA_TEMPLATE_KEY: ${{ secrets.FIGMA_TEMPLATE_KEY }}
        run: |
          mkdir -p deploy
          cat > deploy/.env.production <<EOF
          # Production Secrets - Generated by GitHub Actions
          # Deployed: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          # Figma MCP Integration (Phase 51)
          FIGMA_PAT=${FIGMA_PAT}
          FIGMA_TEAM_ID=${FIGMA_TEAM_ID:-}
          FIGMA_TEMPLATE_KEY=${FIGMA_TEMPLATE_KEY:-}
          EOF
          
          echo "✅ Created .env.production file"
          ls -la deploy/.env.production

      - name: Upload secrets artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-secrets
          path: deploy/.env.production
          retention-days: 1

      - name: Display next steps
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "✅ Secret file created successfully!"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "📋 Next Steps:"
          echo ""
          echo "1. Download the artifact from this workflow run"
          echo "2. Copy .env.production to your production server"
          echo "3. Place it in the deploy/ directory (next to docker-compose.portfolio-prod.yml)"
          echo "4. Restart the backend container:"
          echo "   docker compose -f docker-compose.portfolio-prod.yml restart backend"
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "Or run this command if you have docker compose access:"
          echo "docker compose --env-file .env.production -f docker-compose.portfolio-prod.yml up -d"
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

      - name: Security check
        run: |
          echo "🔒 Security Notes:"
          echo "- This artifact will auto-delete after 1 day"
          echo "- Never commit .env.production to git"
          echo "- The artifact is encrypted by GitHub"
