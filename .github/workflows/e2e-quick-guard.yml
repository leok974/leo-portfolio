name: e2e-quick-guard
on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  guardrails:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: pw-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            pw-${{ runner.os }}-

      - name: Install deps
        run: |
          pnpm install --frozen-lockfile
          npx playwright install --with-deps
          python -m pip install --upgrade pip
          # Minimal backend deps (works with DEV_ALLOW_NO_LLM=1)
          python -m pip install fastapi uvicorn httpx pydantic

      - name: Build UI
        run: pnpm run -s build

      - name: Start backend (safe local mode)
        env:
          SAFE_LIFESPAN: "1"
          DISABLE_PRIMARY: "1"
          DEV_ALLOW_NO_LLM: "1"
          CORS_ALLOW_ALL: "1"
        run: |
          nohup python -m uvicorn assistant_api.main:app --host 127.0.0.1 --port 8001 --log-level warning > backend.log 2>&1 &
          npx wait-on http://127.0.0.1:8001/api/ready

      - name: Serve dist with proxy â†’ backend
        run: |
          nohup npx http-server dist -p 5178 -P http://127.0.0.1:8001 > web.log 2>&1 &
          npx wait-on http://127.0.0.1:5178

      - name: Run guardrails e2e
        env:
          PLAYWRIGHT_GLOBAL_SETUP_SKIP: "1"
          BASE: "http://127.0.0.1:5178"
          API_BASE: "http://127.0.0.1:5178" # same-origin via proxy
        run: npx playwright test tests/e2e/guardrails-injection.spec.ts --project=chromium --reporter=line

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: guardrails-logs
          retention-days: 14
          path: |
            backend.log
            web.log
            playwright-report
            test-results
