name: Auto-merge SiteAgent PRs

on:
  pull_request:
    types: [labeled, synchronize]

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: siteagent-automerge-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  merge:
    # Only run if PR has both 'siteagent' and 'auto' labels and is open
    if: >
      contains(github.event.pull_request.labels.*.name, 'siteagent') &&
      contains(github.event.pull_request.labels.*.name, 'auto') &&
      github.event.pull_request.state == 'open'
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Check if all required checks passed
        id: check-status
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            
            // Get check runs for the PR head SHA
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pr.head.sha
            });
            
            // Check if all check runs passed (or were skipped/neutral)
            const allPassed = checks.check_runs.every(cr => {
              const conclusion = cr.conclusion || '';
              return ['success', 'neutral', 'skipped'].includes(conclusion);
            });
            
            // Also check status checks (older style)
            const { data: statuses } = await github.rest.repos.getCombinedStatusForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pr.head.sha
            });
            
            const statusPassed = statuses.state === 'success' || statuses.statuses.length === 0;
            
            if (!allPassed || !statusPassed) {
              core.setFailed('‚ùå Not all checks passed; skipping automerge.');
              return;
            }
            
            core.info('‚úÖ All checks passed, proceeding with automerge.');

      - name: Squash merge PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                merge_method: 'squash',
                commit_title: `${pr.title} (#${pr.number})`,
                commit_message: pr.body || 'Auto-merged by SiteAgent'
              });
              
              core.info(`‚úÖ Auto-merged PR #${pr.number} via squash.`);
              
              // Add a comment to the PR
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: 'ü§ñ **Auto-merged** by SiteAgent workflow after all checks passed.'
              });
              
            } catch (error) {
              core.warning(`Could not auto-merge: ${error.message}`);
              
              // If merge failed, add a comment explaining why
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `‚ö†Ô∏è **Auto-merge failed**: ${error.message}\n\nPlease merge manually or resolve conflicts.`
              });
            }
