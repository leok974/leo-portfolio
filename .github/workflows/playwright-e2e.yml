name: E2E (Playwright)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: playwright-e2e-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      PW_BASE_URL: http://localhost:8080
      # keep tests faster + deterministic
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: |
            pnpm-lock.yaml

      - name: Install JS deps
        run: pnpm install --frozen-lockfile=false

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright (Chromium)
        run: npx playwright install --with-deps chromium

      - name: Start stack (nginx + backend)
        run: |
          docker compose -f deploy/docker-compose.yml up -d --build nginx backend
          echo "Waiting for server..."
          for i in {1..60}; do
            curl -sf http://localhost:8080/ready && break
            sleep 2
          done
          curl -sS http://localhost:8080/ready || (echo "Server not ready"; docker compose -f deploy/docker-compose.yml ps; exit 1)

      - name: Run Playwright tests (HTML report)
        run: npx playwright test --reporter=html,line

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Dump docker logs (on failure)
        if: failure()
        run: |
          docker compose -f deploy/docker-compose.yml ps
          docker compose -f deploy/docker-compose.yml logs --no-color --timestamps --tail=200 nginx backend || true
