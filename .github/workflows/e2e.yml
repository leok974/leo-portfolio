name: E2E
on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: [ dev, strict ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install pnpm
        run: npm i -g pnpm@9
      - name: Install deps
        run: pnpm i
      - name: Build (strict only)
        if: matrix.mode == 'strict'
        run: pnpm build:prod
      - name: Sync CSP hash (strict only)
        if: matrix.mode == 'strict'
        run: pnpm csp:hash && pnpm csp:sync:test
      - name: Start nginx (strict only)
        if: matrix.mode == 'strict'
        run: |
          docker compose -f docker-compose.test.yml up -d
          for i in {1..60}; do
            if curl -fsS http://localhost:5178/healthz >/dev/null; then
              echo "web-test healthy"; break; fi
            sleep 1
          done
      - name: Playwright install
        run: pnpm exec playwright install --with-deps
      - name: Run tests
        env:
          BASE: ${{ matrix.mode == 'strict' && 'http://localhost:5178' || '' }}
          REQUIRE_CSS_200: ${{ matrix.mode == 'strict' && '1' || '' }}
          REQUIRE_STATUS_PILL_STRICT: ${{ matrix.mode == 'strict' && '1' || '' }}
          PLAYWRIGHT_STRICT_STREAM: ${{ matrix.mode == 'strict' && '1' || '' }}
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            pnpm exec playwright test -g "stylesheet|status pill|summary|ping|root html mime"
          else
            pnpm exec playwright test
          fi
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.mode }}
          path: playwright-report
          retention-days: 7
      - name: Upload traces on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-${{ matrix.mode }}
          path: test-results
          retention-days: 7
      - name: Stop nginx (strict only)
        if: matrix.mode == 'strict'
        run: docker compose -f docker-compose.test.yml down -v

  strict-full:
    name: strict-full (nginx + mock backend)
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install pnpm
        run: npm i -g pnpm@9
      - name: Install deps
        run: pnpm i
      - name: Build
        run: pnpm build:prod
      - name: Sync CSP hash
        run: pnpm csp:hash && pnpm csp:sync:test
      - name: Start full stack (nginx + backend)
        run: |
          docker compose -f docker-compose.test.full.yml up -d --build
          for i in {1..90}; do
            if curl -fsS http://localhost:8080/healthz >/dev/null; then echo "web-test healthy"; break; fi
            sleep 1
          done
          for i in {1..60}; do
            if curl -fsS http://localhost:8101/api/ready >/dev/null; then echo "backend ready"; break; fi
            sleep 1
          done
      - name: Playwright install
        run: pnpm exec playwright install --with-deps
      - name: Run tests (smoke)
        env:
          BASE: http://localhost:8080
          REQUIRE_CSS_200: 1
          REQUIRE_STATUS_PILL_STRICT: 1
          PLAYWRIGHT_STRICT_STREAM: 1
          BACKEND_REQUIRED: 1
          NGINX_STRICT: 1
        run: pnpm exec playwright test -g "stylesheet|status pill|summary|ping"
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-strict-full
          path: playwright-report
          retention-days: 7
      - name: Upload traces on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-strict-full
          path: test-results
          retention-days: 7
      - name: Stop stack
        if: always()
        run: docker compose -f docker-compose.test.full.yml down -v

  e2e-live:
    name: e2e-live (optional smoke test against real API)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install pnpm
        run: npm i -g pnpm@9
      - name: Install deps
        run: pnpm i
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python dependencies
        run: |
          cd assistant_api
          pip install -r requirements.txt
      - name: Start API backend
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SITE_BASE_URL: https://assistant.ledger-mind.org
        run: |
          cd assistant_api
          nohup uvicorn assistant_api.main:app --host 127.0.0.1 --port 8001 > api.log 2>&1 &
          sleep 8
      - name: Start dev UI
        run: |
          nohup pnpm dev --port 8080 > ui.log 2>&1 &
          sleep 5
      - name: Playwright install
        run: pnpm exec playwright install --with-deps
      - name: Run Playwright E2E (live mode)
        env:
          E2E_LIVE: "1"
          E2E_BASE_URL: http://localhost:8080
        run: pnpm exec playwright test tests/e2e/ops-agents.spec.ts
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-live
          path: playwright-report
          retention-days: 7
      - name: Upload traces on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-live
          path: test-results
          retention-days: 7
      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== API Logs ==="
          cat assistant_api/api.log || true
          echo "=== UI Logs ==="
          cat ui.log || true
