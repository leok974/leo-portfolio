name: Lint, Scripts, Tests (Node LTS Matrix)

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
      - name: Install deps
        run: npm ci || npm i
      - name: Lint (ESM guard)
        run: npm run lint
      - name: Script smoke imports
        run: |
          node --eval "await import('./generate-projects.js')"
          node --eval "await import('./optimize-media.js')"
          node --eval "await import('./validate-schema.js')"
      - name: Dispatcher --help
        run: node scripts/bin.mjs --help
      - name: Unit tests
        run: npm run test
      - name: Coverage badges (Node 20 only)
        if: matrix.node == '20'
        run: npm run cov:badges
      - name: Coverage threshold gate (Node 20 only)
        if: matrix.node == '20'
        run: |
          node -e "const s=require('./coverage/coverage-summary.json').total;const fail=(m)=>{console.error(m);process.exit(1)};const req={lines:80,statements:80,functions:70,branches:60};for(const k of Object.keys(req)){const pct=s[k]?.pct??0;if(pct<req[k]) fail(`Coverage gate failed: ${k} ${pct}% < ${req[k]}%`)}console.log('Coverage gates passed:',Object.fromEntries(Object.entries(req)))"
