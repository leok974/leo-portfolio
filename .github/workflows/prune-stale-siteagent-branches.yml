name: Prune stale siteagent branches

on:
  schedule:
    - cron: "17 3 * * *"  # Daily at 03:17 UTC
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  pull-requests: read

jobs:
  prune:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history needed for date checks

      - name: Prune stale siteagent/* branches
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          STALE_DAYS: 14  # Delete branches older than this with no open PR
        run: |
          echo "üîç Scanning for stale siteagent/* branches..."
          
          # Get all remote siteagent branches
          gh api repos/${{ github.repository }}/branches --paginate \
            | jq -r '.[] | select(.name | startswith("siteagent/")) | .name' \
            | while read BR; do
              
              # Skip protected or default branches
              if [ "$BR" = "main" ] || [ "$BR" = "master" ]; then
                continue
              fi
              
              echo "Checking branch: $BR"
              
              # Check if there's an open PR for this branch
              OPEN=$(gh pr list --head "$BR" --state open --json number --jq 'length')
              if [ "$OPEN" -gt 0 ]; then
                echo "  ‚úì Has open PR, keeping"
                continue
              fi
              
              # Get last commit date
              LAST=$(git ls-remote origin "refs/heads/$BR" | cut -f1)
              if [ -z "$LAST" ]; then
                echo "  ‚ö†Ô∏è  Cannot get commit SHA, skipping"
                continue
              fi
              
              # Fetch the commit if needed
              git fetch origin "$BR" --depth=1 2>/dev/null || true
              
              # Get commit timestamp
              DATE=$(git show -s --format=%ct "$LAST" 2>/dev/null) || continue
              if [ -z "$DATE" ]; then
                echo "  ‚ö†Ô∏è  Cannot get commit date, skipping"
                continue
              fi
              
              # Calculate age in days
              NOW=$(date +%s)
              AGE=$(( (NOW - DATE) / 86400 ))
              
              echo "  Age: ${AGE} days"
              
              # Delete if older than threshold
              if [ "$AGE" -ge "$STALE_DAYS" ]; then
                echo "  üóëÔ∏è  Deleting $BR (age: ${AGE}d, no open PR)"
                gh api -X DELETE "repos/${{ github.repository }}/git/refs/heads/$BR" || {
                  echo "  ‚ùå Failed to delete $BR"
                }
              else
                echo "  ‚úì Not stale yet (${AGE}/${STALE_DAYS} days)"
              fi
              
            done
          
          echo "‚úÖ Prune complete"
