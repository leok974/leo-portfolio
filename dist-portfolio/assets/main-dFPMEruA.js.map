{"version":3,"file":"main-dFPMEruA.js","sources":["../../apps/portfolio-ui/portfolio.ts"],"sourcesContent":["/**\n * Portfolio UI - Project Grid with Filtering\n */\n\ninterface Project {\n  title: string;\n  slug: string;\n  tags: string[];\n  thumbnail: string;\n  description: string;\n  demo?: string;\n  problem?: string;\n  solution?: string;\n}\n\nclass PortfolioGrid {\n  private projects: Project[] = [];\n  private currentFilter = 'all';\n  private gridContainer: HTMLElement | null;\n  private loadingElement: HTMLElement | null = null;\n  private emptyElement: HTMLElement | null;\n  private observer!: IntersectionObserver;\n\n  constructor() {\n    this.gridContainer = document.getElementById('portfolio-grid');\n    this.emptyElement = document.getElementById('portfolio-empty');\n\n    if (!this.gridContainer || !this.emptyElement) {\n      console.warn('Portfolio elements not found');\n      return;\n    }\n\n    this.loadingElement = this.gridContainer.querySelector('.portfolio-loading');\n\n    // Setup lazy loading for images\n    this.observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const img = entry.target as HTMLImageElement;\n            const src = img.dataset.src;\n            if (src) {\n              img.src = src;\n              img.removeAttribute('data-src');\n              this.observer.unobserve(img);\n            }\n          }\n        });\n      },\n      { rootMargin: '50px' }\n    );\n\n    this.setupFilterListeners();\n    this.loadProjects();\n  }\n\n  private setupFilterListeners(): void {\n    const filterButtons = document.querySelectorAll('.filter-btn');\n\n    filterButtons.forEach((btn) => {\n      btn.addEventListener('click', (e) => {\n        const target = e.currentTarget as HTMLButtonElement;\n        const filter = target.dataset.filter || 'all';\n\n        // Update active state\n        filterButtons.forEach((b) => b.classList.remove('active'));\n        target.classList.add('active');\n\n        this.currentFilter = filter;\n        this.renderProjects();\n      });\n    });\n  }\n\n  private async loadProjects(): Promise<void> {\n    try {\n      const response = await fetch('/projects.json');\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch projects: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      // Convert object to array\n      this.projects = Object.values(data);\n\n      console.log(`Loaded ${this.projects.length} projects`);\n      this.renderProjects();\n    } catch (error) {\n      console.error('Error loading projects:', error);\n      this.showEmpty();\n    }\n  }\n\n  private renderProjects(): void {\n    if (!this.gridContainer) return;\n\n    // Clear grid\n    this.gridContainer.innerHTML = '';\n\n    // Filter projects\n    const filteredProjects =\n      this.currentFilter === 'all'\n        ? this.projects\n        : this.projects.filter((p) =>\n            p.tags.some((tag) =>\n              tag.toLowerCase().includes(this.currentFilter.toLowerCase())\n            )\n          );\n\n    console.log(\n      `Rendering ${filteredProjects.length} projects (filter: ${this.currentFilter})`\n    );\n\n    if (filteredProjects.length === 0) {\n      this.showEmpty();\n      return;\n    }\n\n    // Hide empty state\n    if (this.emptyElement) {\n      this.emptyElement.style.display = 'none';\n    }\n\n    // Create and append cards\n    filteredProjects.forEach((project, index) => {\n      const card = this.createProjectCard(project, index);\n      this.gridContainer!.appendChild(card);\n    });\n\n    // Setup lazy loading for newly added images\n    const images = this.gridContainer.querySelectorAll('img[data-src]');\n    images.forEach((img) => this.observer.observe(img));\n  }\n\n  private createProjectCard(project: Project, index: number): HTMLElement {\n    const card = document.createElement('div');\n    card.className = 'project-card';\n    card.style.animationDelay = `${index * 0.05}s`;\n\n    const thumbnail = project.thumbnail || '/placeholder.svg';\n    const title = this.escapeHtml(project.title);\n    const description = this.escapeHtml(\n      project.description || project.problem || 'No description available.'\n    );\n\n    // Create tags HTML\n    const tagsHtml = project.tags\n      .slice(0, 4) // Limit to 4 tags\n      .map((tag) => `<span class=\"project-tag\">${this.escapeHtml(tag)}</span>`)\n      .join('');\n\n    // Create link HTML\n    let linkHtml = '';\n    if (project.demo) {\n      linkHtml = `\n        <a href=\"${project.demo}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"project-link\">\n          View Project â†’\n        </a>\n      `;\n    }\n\n    card.innerHTML = `\n      <div class=\"project-thumbnail\">\n        <img data-src=\"${thumbnail}\" alt=\"${title}\" loading=\"lazy\" />\n      </div>\n      <div class=\"project-content\">\n        <h3 class=\"project-title\">${title}</h3>\n        ${tagsHtml ? `<div class=\"project-tags\">${tagsHtml}</div>` : ''}\n        <p class=\"project-description\">${description}</p>\n        ${linkHtml}\n      </div>\n    `;\n\n    return card;\n  }\n\n  private showEmpty(): void {\n    if (!this.gridContainer || !this.emptyElement) return;\n\n    this.gridContainer.innerHTML = '';\n    this.emptyElement.style.display = 'block';\n  }\n\n  private escapeHtml(text: string): string {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n}\n\n// Initialize on DOM ready\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Portfolio UI initialized');\n  new PortfolioGrid();\n});\n\nexport { PortfolioGrid };\n"],"names":["PortfolioGrid","__publicField","entries","entry","img","src","filterButtons","btn","e","target","filter","b","response","data","error","filteredProjects","p","tag","project","index","card","thumbnail","title","description","tagsHtml","linkHtml","text","div"],"mappings":"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"}